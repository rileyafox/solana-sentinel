version: "3.9"

services:
  db:
    image: postgres:16
    container_name: solana-sentinel-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sentinel
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sentinel"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    container_name: solana-sentinel-redis
    ports:
      - "6379:6379"

  api:
    container_name: solana-sentinel-api
    build:
      context: ..                # repo root
      dockerfile: Dockerfile  
    environment:
      GRPC_ADDR: ":8081"
      REST_ADDR: ":8080"
      METRICS_ADDR: ":9102"
      REDIS_URL: "redis://redis:6379/0"  
      DATABASE_URL: "postgres://postgres:postgres@db:5432/sentinel?sslmode=disable"
    depends_on:
      - redis
      - db
    ports:
      - "8080:8080"   # REST gateway
      - "8081:8081"   # gRPC
      - "9102:9102"   # Prometheus metrics

  prometheus:
    image: prom/prometheus
    container_name: solana-sentinel-prom
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  
  sol-ingester:
    container_name: solana-sentinel-ingester
    build:
      context: ..                        
      dockerfile: internal/service/sol-ingester/Dockerfile
    environment:
      SOLANA_WS_URL: wss://api.mainnet-beta.solana.com
      SOLANA_HTTP_URL: https://api.mainnet-beta.solana.com
      SOLANA_COMMITMENT: confirmed
      SUBSCRIBE_PROGRAMS: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA,JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4

      REDIS_URL: redis://redis:6379/0
      REDIS_DEDUPE_TTL_SEC: "86400"
      PROM_ADDR: ":9102"
    depends_on:
      - redis
    ports:
      - "9103:9102" 
    restart: unless-stopped



volumes:
  pgdata: {}
